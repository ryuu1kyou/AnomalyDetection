# セキュリティスキャン専用ワークフロー

name: Security Scan

on:
  schedule:
    - cron: '0 2 * * *'  # 毎日午前2時に実行
  workflow_dispatch:  # 手動実行可能
  push:
    branches: [ main ]
    paths:
      - '**/*.csproj'
      - '**/package.json'
      - '**/yarn.lock'

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    
    # .NET依存関係スキャン
    - name: .NET Vulnerability Scan
      run: |
        dotnet list package --vulnerable --include-transitive --format json > dotnet-vulnerabilities.json
        cat dotnet-vulnerabilities.json
    
    # Node.js依存関係スキャン
    - name: Node.js Vulnerability Scan
      run: |
        cd angular
        npm audit --audit-level moderate --json > ../node-vulnerabilities.json || true
        cat ../node-vulnerabilities.json
    
    # Trivy総合スキャン
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
    
    # CodeQL分析
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp, javascript
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
    
    # 結果のアップロード
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: |
          dotnet-vulnerabilities.json
          node-vulnerabilities.json
          trivy-results.sarif
    
    # Slackへの通知
    - name: Notify security scan results
      uses: 8398a7/action-slack@v3
      if: failure()
      with:
        status: failure
        channel: '#security'
        text: |
          🚨 セキュリティスキャンで脆弱性が検出されました
          Repository: ${{ github.repository }}
          Workflow: ${{ github.workflow }}
          詳細: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  docker-image-scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend image for scanning
      uses: docker/build-push-action@v5
      with:
        context: .
        file: src/AnomalyDetection.HttpApi.Host/Dockerfile
        tags: anomaly-detection-backend:scan
        load: true
        cache-from: type=gha
    
    - name: Build frontend image for scanning
      uses: docker/build-push-action@v5
      with:
        context: angular
        file: angular/Dockerfile
        tags: anomaly-detection-frontend:scan
        load: true
        cache-from: type=gha
    
    - name: Scan backend image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'anomaly-detection-backend:scan'
        format: 'sarif'
        output: 'backend-image-scan.sarif'
    
    - name: Scan frontend image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'anomaly-detection-frontend:scan'
        format: 'sarif'
        output: 'frontend-image-scan.sarif'
    
    - name: Upload image scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: |
          backend-image-scan.sarif
          frontend-image-scan.sarif