name: Dependency Update

on:
  schedule:
    # 毎週月曜日の午前9時に実行
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dotnet-dependencies:
    name: Update .NET Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Install dotnet-outdated tool
      run: dotnet tool install --global dotnet-outdated-tool

    - name: Check for outdated packages
      run: |
        dotnet outdated --output json > outdated-packages.json
        cat outdated-packages.json

    - name: Update packages
      run: |
        # マイナーバージョンアップデートのみ適用
        dotnet outdated --upgrade --version-lock Major
        
    - name: Build and test after updates
      run: |
        dotnet restore AnomalyDetection.sln
        dotnet build AnomalyDetection.sln --configuration Release
        dotnet test --configuration Release --no-build

    - name: Create Pull Request for .NET updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update .NET dependencies'
        title: '🔄 Update .NET Dependencies'
        body: |
          ## .NET Dependencies Update
          
          This PR updates .NET dependencies to their latest compatible versions.
          
          ### Changes
          - Updated NuGet packages to latest minor versions
          - Maintained major version compatibility
          
          ### Testing
          - ✅ Build successful
          - ✅ Unit tests passing
          
          ### Review Notes
          Please review the changes and ensure all functionality works as expected.
          
          Auto-generated by dependency update workflow.
        branch: update/dotnet-dependencies
        delete-branch: true

  update-node-dependencies:
    name: Update Node.js Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: |
        cd angular
        yarn install --frozen-lockfile

    - name: Check for outdated packages
      run: |
        cd angular
        yarn outdated --json > ../outdated-node-packages.json || true
        cat ../outdated-node-packages.json

    - name: Update dependencies
      run: |
        cd angular
        # パッチバージョンのみ更新
        yarn upgrade --pattern "*" --latest --exact
        
        # セキュリティ脆弱性の修正
        yarn audit --level moderate --json > ../audit-before.json || true
        yarn audit fix || true
        yarn audit --level moderate --json > ../audit-after.json || true

    - name: Build and test after updates
      run: |
        cd angular
        yarn build:prod
        yarn test:ci
        yarn lint

    - name: Create Pull Request for Node.js updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Node.js dependencies'
        title: '🔄 Update Node.js Dependencies'
        body: |
          ## Node.js Dependencies Update
          
          This PR updates Node.js dependencies to their latest compatible versions.
          
          ### Changes
          - Updated npm packages to latest patch versions
          - Applied security vulnerability fixes
          
          ### Testing
          - ✅ Build successful
          - ✅ Unit tests passing
          - ✅ Linting passed
          
          ### Security
          - 🔒 Security audit completed
          - 🛡️ Vulnerabilities addressed
          
          ### Review Notes
          Please review the changes and ensure all functionality works as expected.
          
          Auto-generated by dependency update workflow.
        branch: update/node-dependencies
        delete-branch: true

  update-docker-base-images:
    name: Update Docker Base Images
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for base image updates
      run: |
        # .NET base image の最新バージョンを確認
        CURRENT_DOTNET=$(grep "FROM mcr.microsoft.com/dotnet" src/AnomalyDetection.HttpApi.Host/Dockerfile | head -1 | cut -d: -f2)
        LATEST_DOTNET=$(curl -s "https://mcr.microsoft.com/v2/dotnet/aspnet/tags/list" | jq -r '.tags[]' | grep "^9\." | sort -V | tail -1)
        
        echo "Current .NET version: $CURRENT_DOTNET"
        echo "Latest .NET version: $LATEST_DOTNET"
        
        # Node.js base image の最新バージョンを確認
        CURRENT_NODE=$(grep "FROM node:" angular/Dockerfile | head -1 | cut -d: -f2)
        LATEST_NODE=$(curl -s "https://registry.hub.docker.com/v2/repositories/library/node/tags?page_size=100" | jq -r '.results[].name' | grep "^18.*-alpine$" | sort -V | tail -1)
        
        echo "Current Node version: $CURRENT_NODE"
        echo "Latest Node version: $LATEST_NODE"
        
        # バージョンが異なる場合は更新
        if [ "$CURRENT_DOTNET" != "$LATEST_DOTNET" ]; then
          sed -i "s|mcr.microsoft.com/dotnet/aspnet:$CURRENT_DOTNET|mcr.microsoft.com/dotnet/aspnet:$LATEST_DOTNET|g" src/AnomalyDetection.HttpApi.Host/Dockerfile
          sed -i "s|mcr.microsoft.com/dotnet/sdk:$CURRENT_DOTNET|mcr.microsoft.com/dotnet/sdk:$LATEST_DOTNET|g" src/AnomalyDetection.HttpApi.Host/Dockerfile
          echo "DOTNET_UPDATED=true" >> $GITHUB_ENV
        fi
        
        if [ "$CURRENT_NODE" != "$LATEST_NODE" ]; then
          sed -i "s|node:$CURRENT_NODE|node:$LATEST_NODE|g" angular/Dockerfile
          echo "NODE_UPDATED=true" >> $GITHUB_ENV
        fi

    - name: Test Docker builds
      if: env.DOTNET_UPDATED == 'true' || env.NODE_UPDATED == 'true'
      run: |
        # バックエンドのビルドテスト
        if [ "$DOTNET_UPDATED" == "true" ]; then
          docker build -t test-backend -f src/AnomalyDetection.HttpApi.Host/Dockerfile .
        fi
        
        # フロントエンドのビルドテスト
        if [ "$NODE_UPDATED" == "true" ]; then
          docker build -t test-frontend -f angular/Dockerfile angular/
        fi

    - name: Create Pull Request for Docker updates
      if: env.DOTNET_UPDATED == 'true' || env.NODE_UPDATED == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Docker base images'
        title: '🐳 Update Docker Base Images'
        body: |
          ## Docker Base Images Update
          
          This PR updates Docker base images to their latest versions.
          
          ### Changes
          ${{ env.DOTNET_UPDATED == 'true' && '- ✅ Updated .NET base images' || '' }}
          ${{ env.NODE_UPDATED == 'true' && '- ✅ Updated Node.js base images' || '' }}
          
          ### Testing
          - ✅ Docker builds successful
          - 🔒 Security improvements included
          
          ### Benefits
          - Latest security patches
          - Performance improvements
          - Bug fixes from upstream
          
          ### Review Notes
          Please review the changes and test the Docker builds in your environment.
          
          Auto-generated by dependency update workflow.
        branch: update/docker-base-images
        delete-branch: true

  notify-updates:
    name: Notify Update Status
    runs-on: ubuntu-latest
    needs: [update-dotnet-dependencies, update-node-dependencies, update-docker-base-images]
    if: always()
    
    steps:
    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#development'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        custom_payload: |
          {
            text: "🔄 Dependency update workflow completed",
            attachments: [{
              color: "${{ job.status == 'success' && 'good' || 'warning' }}",
              fields: [{
                title: "Repository",
                value: "${{ github.repository }}",
                short: true
              }, {
                title: "Status",
                value: "${{ job.status }}",
                short: true
              }, {
                title: "Updates",
                value: "Check for new pull requests with dependency updates",
                short: false
              }]
            }]
          }